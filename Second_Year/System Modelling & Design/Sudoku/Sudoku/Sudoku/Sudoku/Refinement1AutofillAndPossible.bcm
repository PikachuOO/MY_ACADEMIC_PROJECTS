<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<org.eventb.core.scMachineFile org.eventb.core.accurate="true" org.eventb.core.configuration="org.eventb.core.fwd">
<org.eventb.core.scRefinesMachine name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.refinesMachine#'"/>
<org.eventb.core.scSeesContext name="(" org.eventb.core.scTarget="/Sudoku/PossibleGrid.bcc" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.seesContext#*"/>
<org.eventb.core.scInternalContext name="SudokuGrid">
<org.eventb.core.scAxiom name="'" org.eventb.core.label="axm1" org.eventb.core.predicate="ROW=1 ‥ 9" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="(" org.eventb.core.label="axm2" org.eventb.core.predicate="COL=1 ‥ 9" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name=")" org.eventb.core.label="axm3" org.eventb.core.predicate="NUM=1 ‥ 9" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#." org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="*" org.eventb.core.label="axm4" org.eventb.core.predicate="BOX∈ROW × COL → 1 ‥ 3 × 1 ‥ 3" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="+" org.eventb.core.label="axm5" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL⇒row ↦ col∈dom(BOX)" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="," org.eventb.core.label="axm6" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL⇒BOX(row ↦ col)=(row − 1) ÷ 3+1 ↦ (col − 1) ÷ 3+1" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="-" org.eventb.core.label="axm7" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈dom(dom(BOX))∧col∈ran(dom(BOX))⇒BOX(row ↦ col)=(row − 1) ÷ 3+1 ↦ (col − 1) ÷ 3+1" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#2" org.eventb.core.theorem="true"/>
<org.eventb.core.scAxiom name="." org.eventb.core.label="axm8" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,rowX⦂ℤ,colX⦂ℤ·row ↦ col∈dom(BOX)∧rowX ↦ colX∈dom(BOX)∧(rowX − 1) ÷ 3+1 ↦ (colX − 1) ÷ 3+1≠(row − 1) ÷ 3+1 ↦ (col − 1) ÷ 3+1⇒BOX(row ↦ col)≠BOX(rowX ↦ colX)" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.axiom#3" org.eventb.core.theorem="true"/>
<org.eventb.core.scConstant name="BOX" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.constant#\/" org.eventb.core.type="ℙ(ℤ×ℤ×(ℤ×ℤ))"/>
<org.eventb.core.scConstant name="COL" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.constant#)" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.scConstant name="NUM" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.constant#-" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.scConstant name="ROW" org.eventb.core.source="/Sudoku/SudokuGrid.buc|org.eventb.core.contextFile#SudokuGrid|org.eventb.core.constant#'" org.eventb.core.type="ℙ(ℤ)"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInternalContext name="PossibleGrid">
<org.eventb.core.scExtendsContext name="'" org.eventb.core.scTarget="/Sudoku/SudokuGrid.bcc|org.eventb.core.scContextFile#SudokuGrid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.extendsContext#'"/>
<org.eventb.core.scAxiom name="SudokuGrie" org.eventb.core.label="axm1" org.eventb.core.predicate="grid∈ROW ↔ COL" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrif" org.eventb.core.label="axm2" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL⇒row ↦ col∈grid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrig" org.eventb.core.label="axm4" org.eventb.core.predicate="SAMEROW∈grid ↔ grid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#," org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrih" org.eventb.core.label="axm5" org.eventb.core.predicate="SAMECOL∈grid ↔ grid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#." org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrii" org.eventb.core.label="axm6" org.eventb.core.predicate="SAMEBOX∈grid ↔ grid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrij" org.eventb.core.label="axm7" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,rowb⦂ℤ,colb⦂ℤ·rowa∈ROW∧rowb∈ROW∧cola∈COL∧colb∈COL∧rowa=rowb⇒rowa ↦ cola ↦ (rowb ↦ colb)∈SAMEROW" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#axm5" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGrik" org.eventb.core.label="axm8" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,rowb⦂ℤ,colb⦂ℤ·rowa∈ROW∧rowb∈ROW∧cola∈COL∧colb∈COL∧cola=colb⇒rowa ↦ cola ↦ (rowb ↦ colb)∈SAMECOL" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#axm6" org.eventb.core.theorem="false"/>
<org.eventb.core.scAxiom name="SudokuGril" org.eventb.core.label="axm9" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,rowb⦂ℤ,colb⦂ℤ·rowa∈ROW∧rowb∈ROW∧cola∈COL∧colb∈COL∧BOX(rowa ↦ cola)=BOX(rowb ↦ colb)⇒rowa ↦ cola ↦ (rowb ↦ colb)∈SAMEBOX" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.axiom#axm7" org.eventb.core.theorem="false"/>
<org.eventb.core.scConstant name="SAMEBOX" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.constant#\/" org.eventb.core.type="ℙ(ℤ×ℤ×(ℤ×ℤ))"/>
<org.eventb.core.scConstant name="SAMECOL" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.constant#-" org.eventb.core.type="ℙ(ℤ×ℤ×(ℤ×ℤ))"/>
<org.eventb.core.scConstant name="SAMEROW" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.constant#+" org.eventb.core.type="ℙ(ℤ×ℤ×(ℤ×ℤ))"/>
<org.eventb.core.scConstant name="grid" org.eventb.core.source="/Sudoku/PossibleGrid.buc|org.eventb.core.contextFile#PossibleGrid|org.eventb.core.constant#(" org.eventb.core.type="ℙ(ℤ×ℤ)"/>
</org.eventb.core.scInternalContext>
<org.eventb.core.scInvariant name="SudokuGrie" org.eventb.core.label="inv1" org.eventb.core.predicate="sudokuGrid∈ROW × COL ⇸ NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="SudokuGrif" org.eventb.core.label="inv2" org.eventb.core.predicate="dom(sudokuGrid)⊆dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv8" org.eventb.core.theorem="true"/>
<org.eventb.core.scInvariant name="SudokuGrig" org.eventb.core.label="inv3" org.eventb.core.predicate="sudokuGrid∈dom(BOX) ⇸ NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv9" org.eventb.core.theorem="true"/>
<org.eventb.core.scInvariant name="SudokuGrih" org.eventb.core.label="inv4" org.eventb.core.predicate="finite(sudokuGrid)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv&gt;" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="SudokuGrii" org.eventb.core.label="inv5" org.eventb.core.predicate="card(sudokuGrid)≤81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv=" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="SudokuGrij" org.eventb.core.label="inv6" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈sudokuGrid∧row ↦ col∈dom(sudokuGrid)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(sudokuGrid) ∖ {row ↦ col}∧rowX≠row⇒sudokuGrid(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(sudokuGrid) ∖ {row ↦ col}∧colX≠col⇒sudokuGrid(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv:" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="SudokuGrik" org.eventb.core.label="inv7" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈sudokuGrid⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈sudokuGrid ∖ {rowa ↦ cola ↦ num}⇒rowa≠rowb∨cola≠colb)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv7" org.eventb.core.theorem="true"/>
<org.eventb.core.scInvariant name="SudokuGril" org.eventb.core.label="inv8" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈sudokuGrid∧rowa ↦ cola∈dom(sudokuGrid)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈sudokuGrid ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(sudokuGrid)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv2" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="SudokuGrim" org.eventb.core.label="inv9" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,rowb⦂ℤ,colb⦂ℤ·rowa ↦ cola∈dom(sudokuGrid)∧rowb ↦ colb∈dom(sudokuGrid)∧sudokuGrid(rowa ↦ cola)≠sudokuGrid(rowb ↦ colb)∧BOX(rowa ↦ cola)=BOX(rowb ↦ colb)⇒rowa≠rowb∨cola≠colb" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.invariant#inv;" org.eventb.core.theorem="true"/>
<org.eventb.core.scInvariant name="PossibleGrie" org.eventb.core.label="inv1" org.eventb.core.predicate="possible∈grid → ℙ(NUM)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invA" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrif" org.eventb.core.label="inv2" org.eventb.core.predicate="dom(BOX)=dom(possible)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#inv?" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrig" org.eventb.core.label="inv3" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row ↦ col∈dom(possible)⇒finite(possible(row ↦ col))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invB" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrih" org.eventb.core.label="inv4" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∈dom(sudokuGrid)⇒possible(row ↦ col)=(∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invC" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrii" org.eventb.core.label="inv5" org.eventb.core.predicate="upToDate∈BOOL" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invF" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrij" org.eventb.core.label="inv6" org.eventb.core.predicate="redAlert∈BOOL" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invI" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrik" org.eventb.core.label="inv7" org.eventb.core.predicate="hintedCell∈0 ‥ 9 × 0 ‥ 9 × ℙ(0 ‥ 9)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invM" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGril" org.eventb.core.label="inv8" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∉dom(sudokuGrid)∧row ↦ col∈dom(possible)∧upToDate=TRUE⇒possible(row ↦ col)∩union({numberSet⦂ℙ(ℤ),rowx⦂ℤ,colx⦂ℤ·numberSet∈ℙ(NUM)∧rowx∈ROW∧colx∈COL∧rowx ↦ colx∈(SAMEBOX[{row ↦ col}]∪SAMEROW[{row ↦ col}]∪SAMECOL[{row ↦ col}])∩dom(sudokuGrid)∧sudokuGrid(rowx ↦ colx)∈numberSet ∣ numberSet})=(∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invO" org.eventb.core.theorem="false"/>
<org.eventb.core.scInvariant name="PossibleGrim" org.eventb.core.label="inv9" org.eventb.core.predicate="∀cell⦂ℤ×ℤ·cell∈grid⇒cell∈dom(BOX)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.invariant#invP" org.eventb.core.theorem="true"/>
<org.eventb.core.scVariable name="hintedCell" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.variable#invL" org.eventb.core.type="ℤ×ℤ×ℙ(ℤ)"/>
<org.eventb.core.scVariable name="possible" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.variable#inv=" org.eventb.core.type="ℙ(ℤ×ℤ×ℙ(ℤ))"/>
<org.eventb.core.scVariable name="redAlert" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.variable#invH" org.eventb.core.type="BOOL"/>
<org.eventb.core.scVariable name="sudokuGrid" org.eventb.core.abstract="true" org.eventb.core.concrete="true" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.variable#(" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scVariable name="upToDate" org.eventb.core.abstract="false" org.eventb.core.concrete="true" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.variable#invE" org.eventb.core.type="BOOL"/>
<org.eventb.core.scEvent name="PossibleGrin" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="INITIALISATION" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrie" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6"/>
<org.eventb.core.scAction name="'" org.eventb.core.assignment="sudokuGrid ≔ ∅ ⦂ ℙ(ℤ×ℤ×ℤ)" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#'|org.eventb.core.action#'"/>
<org.eventb.core.scAction name="(" org.eventb.core.assignment="possible ≔ λcell⦂ℤ×ℤ·cell∈grid ∣ NUM" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6|org.eventb.core.action#)"/>
<org.eventb.core.scAction name=")" org.eventb.core.assignment="upToDate ≔ TRUE" org.eventb.core.label="act3" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6|org.eventb.core.action#*"/>
<org.eventb.core.scAction name="*" org.eventb.core.assignment="redAlert ≔ FALSE" org.eventb.core.label="act4" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6|org.eventb.core.action#+"/>
<org.eventb.core.scAction name="+" org.eventb.core.assignment="hintedCell ≔ 0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.label="act5" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv6|org.eventb.core.action#,"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGrio" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="setUp" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrif" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="initGrid∈ROW × COL ⇸ NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="sudokuGrid=(∅ ⦂ ℙ(ℤ×ℤ×ℤ))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈initGrid∧row ↦ col∈dom(initGrid)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(initGrid) ∖ {row ↦ col}⇒initGrid(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(initGrid) ∖ {row ↦ col}⇒initGrid(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈initGrid∧rowa ↦ cola∈dom(initGrid)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈initGrid ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(initGrid)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="finite(initGrid)∧card(initGrid)&lt;81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="initGrie" org.eventb.core.assignment="sudokuGrid ≔ initGrid" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.action#)"/>
<org.eventb.core.scParameter name="initGrid" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv4|org.eventb.core.parameter#'" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scGuard name="initGrif" org.eventb.core.label="grd6" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="initGrig" org.eventb.core.label="grd7" org.eventb.core.predicate="redAlert=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="initGrih" org.eventb.core.assignment="possible ≔ possible(λcell⦂ℤ×ℤ·cell∈dom(initGrid) ∣ ∅ ⦂ ℙ(ℤ))" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7|org.eventb.core.action#("/>
<org.eventb.core.scAction name="initGrii" org.eventb.core.assignment="upToDate ≔ FALSE" org.eventb.core.label="act3" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv7|org.eventb.core.action#*"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGrip" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="fill" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrig" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="row∈ROW" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="col∈COL" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="num∈NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="fillGrid=sudokuGrid∪{row ↦ col ↦ num}" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="row ↦ col∉dom(sudokuGrid)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="row ↦ col∈dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="card(sudokuGrid)&lt;81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="card(fillGrid)≤81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="dom(fillGrid)⊆dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd10" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈fillGrid∧row ↦ col∈dom(fillGrid)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(fillGrid) ∖ {row ↦ col}∧rowX≠row⇒fillGrid(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(fillGrid) ∖ {row ↦ col}∧colX≠col⇒fillGrid(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd11" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈fillGrid∧rowa ↦ cola∈dom(fillGrid)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈fillGrid ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(fillGrid)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="fillGrie" org.eventb.core.assignment="sudokuGrid ≔ fillGrid" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.action#1"/>
<org.eventb.core.scParameter name="col" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="fillGrid" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scParameter name="num" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#)" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="row" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#'" org.eventb.core.type="ℤ"/>
<org.eventb.core.scGuard name="fillGrif" org.eventb.core.label="grd12" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrig" org.eventb.core.label="grd13" org.eventb.core.predicate="num∈possible(row ↦ col)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrih" org.eventb.core.label="grd14" org.eventb.core.predicate="redAlert=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrii" org.eventb.core.label="grd15" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrij" org.eventb.core.label="grd16" org.eventb.core.predicate="∀cell⦂ℤ×ℤ·cell∈dom(possible)∧cell∉dom(sudokuGrid)⇒card(possible(cell))&gt;1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="fillGrik" org.eventb.core.assignment="possible ≔ possible{row ↦ col ↦ (∅ ⦂ ℙ(ℤ))}" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.action#("/>
<org.eventb.core.scAction name="fillGril" org.eventb.core.assignment="upToDate ≔ FALSE" org.eventb.core.label="act3" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv8|org.eventb.core.action#+"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGriq" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="autofill" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrig" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="row∈ROW" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="col∈COL" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="num∈NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="fillGrid=sudokuGrid∪{row ↦ col ↦ num}" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="row ↦ col∉dom(sudokuGrid)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="row ↦ col∈dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="card(sudokuGrid)&lt;81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="card(fillGrid)≤81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="dom(fillGrid)⊆dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd10" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈fillGrid∧row ↦ col∈dom(fillGrid)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(fillGrid) ∖ {row ↦ col}∧rowX≠row⇒fillGrid(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(fillGrid) ∖ {row ↦ col}∧colX≠col⇒fillGrid(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd11" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈fillGrid∧rowa ↦ cola∈dom(fillGrid)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈fillGrid ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(fillGrid)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="fillGrie" org.eventb.core.assignment="sudokuGrid ≔ fillGrid" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.action#1"/>
<org.eventb.core.scParameter name="col" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="fillGrid" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scParameter name="num" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#)" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="row" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#'" org.eventb.core.type="ℤ"/>
<org.eventb.core.scGuard name="fillGrif" org.eventb.core.label="grd12" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrig" org.eventb.core.label="grd13" org.eventb.core.predicate="redAlert=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd3" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrih" org.eventb.core.label="grd14" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrii" org.eventb.core.label="grd15" org.eventb.core.predicate="∃cell⦂ℤ×ℤ·cell∈dom(possible)∧cell∉dom(sudokuGrid)⇒card(possible(cell))=1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrij" org.eventb.core.label="grd16" org.eventb.core.predicate="card(possible(row ↦ col))=1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd6" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrik" org.eventb.core.label="grd17" org.eventb.core.predicate="num∈possible(row ↦ col)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.guard#grd2" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="fillGril" org.eventb.core.assignment="possible ≔ possible{row ↦ col ↦ (∅ ⦂ ℙ(ℤ))}" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.action#act1"/>
<org.eventb.core.scAction name="fillGrim" org.eventb.core.assignment="upToDate ≔ FALSE" org.eventb.core.label="act3" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invQ|org.eventb.core.action#act2"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGrir" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="digCell" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv9">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrih" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv9|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="row∈ROW" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="col∈COL" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="num∈NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd3" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="digCell=sudokuGrid ∖ {row ↦ col ↦ num}" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="row ↦ col∈dom(sudokuGrid)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="row ↦ col∈dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd7" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="card(sudokuGrid)&lt;81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="card(digCell)≤81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="dom(digCell)⊆dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd10" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd10" org.eventb.core.predicate="num=sudokuGrid(row ↦ col)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#element4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd11" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈digCell∧row ↦ col∈dom(digCell)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(digCell) ∖ {row ↦ col}∧rowX≠row⇒digCell(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(digCell) ∖ {row ↦ col}∧colX≠col⇒digCell(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd11" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="2" org.eventb.core.label="grd12" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈digCell∧rowa ↦ cola∈dom(digCell)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈digCell ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(digCell)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.guard#grd12" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="digCelm" org.eventb.core.assignment="sudokuGrid ≔ digCell" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.action#+"/>
<org.eventb.core.scParameter name="col" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.parameter#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="digCell" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.parameter#element2" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scParameter name="num" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.parameter#element1" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="row" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#evt1|org.eventb.core.parameter#)" org.eventb.core.type="ℤ"/>
<org.eventb.core.scGuard name="digCeln" org.eventb.core.label="grd13" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv9|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="digCelo" org.eventb.core.label="grd14" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv9|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="digCelp" org.eventb.core.assignment="upToDate ≔ FALSE" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#inv9|org.eventb.core.action#)"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGris" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="upDatePossibleFullGrid" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1">
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="upToDate=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.guard#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="card(sudokuGrid)=81" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="dom(sudokuGrid)=dom(possible)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="∀cell⦂ℤ×ℤ·cell∈grid⇒cell∈dom(sudokuGrid)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.guard#-" org.eventb.core.theorem="true"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="," org.eventb.core.assignment="upToDate ≔ TRUE" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.action#("/>
<org.eventb.core.scAction name="-" org.eventb.core.assignment="possible ≔ λcell⦂ℤ×ℤ·cell∈grid ∣ ∅ ⦂ ℙ(ℤ)" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt1|org.eventb.core.action#+"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGrit" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="upDatePossible" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG">
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="upToDate=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∈dom(sudokuGrid)⇒possible(row ↦ col)=(∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∉dom(sudokuGrid)⇒finite(possible(row ↦ col))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∉dom(sudokuGrid)⇒possible(row ↦ col)∈ℙ(NUM)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#." org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="card(sudokuGrid)&lt;81" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="-" org.eventb.core.assignment="upToDate ≔ TRUE" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.action#("/>
<org.eventb.core.scAction name="." org.eventb.core.assignment="possible :∣ (∀cell⦂ℤ×ℤ·cell∈dom(sudokuGrid)∧cell∈grid⇒possible'(cell)=possible(cell))∧(∀row⦂ℤ,col⦂ℤ·row∈ROW∧col∈COL∧row ↦ col∉dom(sudokuGrid)∧row ↦ col∈grid⇒possible'(row ↦ col)=possible(row ↦ col) ∖ union({numberSet⦂ℙ(ℤ),rowx⦂ℤ,colx⦂ℤ·numberSet∈ℙ(NUM)∧rowx∈ROW∧colx∈COL∧rowx ↦ colx∈(SAMEBOX[{row ↦ col}]∪SAMEROW[{row ↦ col}]∪SAMECOL[{row ↦ col}])∩dom(sudokuGrid)∧sudokuGrid(rowx ↦ colx)∈numberSet ∣ numberSet}))" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invG|org.eventb.core.action#+"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGriu" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="alarm" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ">
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="cell∈grid" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ|org.eventb.core.guard#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="cell∉dom(sudokuGrid)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ|org.eventb.core.guard#(" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="possible(cell)=(∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="cell" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ|org.eventb.core.parameter#+" org.eventb.core.type="ℤ×ℤ"/>
<org.eventb.core.scAction name="celm" org.eventb.core.assignment="redAlert ≔ TRUE" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invJ|org.eventb.core.action#*"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGriv" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="unAlarm" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt2">
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="∀cell⦂ℤ×ℤ·cell∈grid∧cell∉dom(sudokuGrid)⇒possible(cell)≠(∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt2|org.eventb.core.guard#'" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="redAlert=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt2|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name=")" org.eventb.core.assignment="redAlert ≔ FALSE" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#evt2|org.eventb.core.action#*"/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGriw" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="false" org.eventb.core.label="hint" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK">
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="row∈ROW" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#)" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="col∈COL" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="sudokuGrid≠(∅ ⦂ ℙ(ℤ×ℤ×ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="row ↦ col∉dom(sudokuGrid)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ·rowa ↦ cola∈dom(possible)⇒finite(possible(row ↦ col))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ·rowa ↦ cola∈dom(possible) ∖ dom(sudokuGrid)⇒card(possible(rowa ↦ cola))≥card(possible(row ↦ col))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="hintedCell=0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.guard#1" org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="col" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.parameter#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="row" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.parameter#'" org.eventb.core.type="ℤ"/>
<org.eventb.core.scAction name="rox" org.eventb.core.assignment="hintedCell ≔ row ↦ col ↦ possible(row ↦ col)" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invK|org.eventb.core.action#."/>
</org.eventb.core.scEvent>
<org.eventb.core.scEvent name="PossibleGrix" org.eventb.core.accurate="true" org.eventb.core.convergence="0" org.eventb.core.extended="true" org.eventb.core.label="guess" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN">
<org.eventb.core.scRefinesEvent name="'" org.eventb.core.scTarget="/Sudoku/AbstractLevel.bcm|org.eventb.core.scMachineFile#AbstractLevel|org.eventb.core.scEvent#sudokuGrig" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.refinesEvent#'"/>
<org.eventb.core.scGuard name="'" org.eventb.core.label="grd1" org.eventb.core.predicate="row∈ROW" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#*" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="(" org.eventb.core.label="grd2" org.eventb.core.predicate="col∈COL" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#+" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name=")" org.eventb.core.label="grd3" org.eventb.core.predicate="num∈NUM" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#," org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="*" org.eventb.core.label="grd4" org.eventb.core.predicate="fillGrid=sudokuGrid∪{row ↦ col ↦ num}" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#7" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="+" org.eventb.core.label="grd5" org.eventb.core.predicate="row ↦ col∉dom(sudokuGrid)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#-" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="," org.eventb.core.label="grd6" org.eventb.core.predicate="row ↦ col∈dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="-" org.eventb.core.label="grd7" org.eventb.core.predicate="card(sudokuGrid)&lt;81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="." org.eventb.core.label="grd8" org.eventb.core.predicate="card(fillGrid)≤81" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#9" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="/" org.eventb.core.label="grd9" org.eventb.core.predicate="dom(fillGrid)⊆dom(BOX)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#8" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="0" org.eventb.core.label="grd10" org.eventb.core.predicate="∀row⦂ℤ,col⦂ℤ,num⦂ℤ·row ↦ col ↦ num∈fillGrid∧row ↦ col∈dom(fillGrid)⇒(∀rowX⦂ℤ·rowX ↦ col∈dom(fillGrid) ∖ {row ↦ col}∧rowX≠row⇒fillGrid(rowX ↦ col)≠num)∧(∀colX⦂ℤ·row ↦ colX∈dom(fillGrid) ∖ {row ↦ col}∧colX≠col⇒fillGrid(row ↦ colX)≠num)" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#\/" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="1" org.eventb.core.label="grd11" org.eventb.core.predicate="∀rowa⦂ℤ,cola⦂ℤ,num⦂ℤ·rowa ↦ cola ↦ num∈fillGrid∧rowa ↦ cola∈dom(fillGrid)⇒(∀rowb⦂ℤ,colb⦂ℤ·rowb ↦ colb ↦ num∈fillGrid ∖ {rowa ↦ cola ↦ num}∧rowb ↦ colb∈dom(fillGrid)⇒BOX(rowa ↦ cola)≠BOX(rowb ↦ colb))" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.guard#0" org.eventb.core.theorem="false"/>
<org.eventb.core.scAction name="fillGrie" org.eventb.core.assignment="sudokuGrid ≔ fillGrid" org.eventb.core.label="act1" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.action#1"/>
<org.eventb.core.scParameter name="col" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#(" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="fillGrid" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#6" org.eventb.core.type="ℙ(ℤ×ℤ×ℤ)"/>
<org.eventb.core.scParameter name="num" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#)" org.eventb.core.type="ℤ"/>
<org.eventb.core.scParameter name="row" org.eventb.core.source="/Sudoku/AbstractLevel.bum|org.eventb.core.machineFile#AbstractLevel|org.eventb.core.event#inv3|org.eventb.core.parameter#'" org.eventb.core.type="ℤ"/>
<org.eventb.core.scGuard name="fillGrif" org.eventb.core.label="grd12" org.eventb.core.predicate="upToDate=TRUE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd1" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrig" org.eventb.core.label="grd13" org.eventb.core.predicate="num∈possible(row ↦ col)" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd2" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrih" org.eventb.core.label="grd14" org.eventb.core.predicate="redAlert=FALSE" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd3" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrii" org.eventb.core.label="grd15" org.eventb.core.predicate="hintedCell≠0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd4" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrij" org.eventb.core.label="grd16" org.eventb.core.predicate="row ↦ col ↦ numSet=hintedCell" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd5" org.eventb.core.theorem="false"/>
<org.eventb.core.scGuard name="fillGrik" org.eventb.core.label="grd17" org.eventb.core.predicate="num∈numSet" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.guard#grd7" org.eventb.core.theorem="false"/>
<org.eventb.core.scParameter name="numSet" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.parameter#grd8" org.eventb.core.type="ℙ(ℤ)"/>
<org.eventb.core.scAction name="fillGril" org.eventb.core.assignment="possible ≔ possible{row ↦ col ↦ (∅ ⦂ ℙ(ℤ))}" org.eventb.core.label="act2" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.action#act1"/>
<org.eventb.core.scAction name="fillGrim" org.eventb.core.assignment="upToDate ≔ FALSE" org.eventb.core.label="act3" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.action#act2"/>
<org.eventb.core.scAction name="fillGrin" org.eventb.core.assignment="hintedCell ≔ 0 ↦ 0 ↦ (∅ ⦂ ℙ(ℤ))" org.eventb.core.label="act4" org.eventb.core.source="/Sudoku/Refinement1AutofillAndPossible.bum|org.eventb.core.machineFile#Refinement1AutofillAndPossible|org.eventb.core.event#invN|org.eventb.core.action#grd6"/>
</org.eventb.core.scEvent>
</org.eventb.core.scMachineFile>
